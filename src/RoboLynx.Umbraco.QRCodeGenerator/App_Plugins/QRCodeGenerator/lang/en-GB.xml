<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<language alias="en" intName="English (UK)" localName="English (UK)" lcid="" culture="en-GB">
	<creator>
		<name>Sebastian Felis</name>
		<link>https://robolynx.pl</link>
	</creator>
	<area alias="qrCodeTypes">
		<key alias="textTypeName">Text</key>
		<key alias="textTypeDescription">After user will scan the code it will saw specify text in code scanner. Argument: text (string)</key>
		<key alias="phoneNumberTypeName">Phone number</key>
		<key alias="phoneNumberTypeDescription">After user will scan the code it will saw specify phone number ready to call. Argument: number (string)</key>
		<key alias="geolocationGEOTypeName">Geo-location (GEO)</key>
		<key alias="geolocationGEOTypeDescription">After user will scan the code it will open default map application with pinned specify position. Arguments: latitude (double), longitude (double)</key>
		<key alias="geolocationGooleMapTypeName">Geo-location (Google Map)</key>
		<key alias="geolocationGooleMapTypeDescription">After user will scan the code it will open Google Maps application or website with pinned specify position. Arguments: latitude (double), longitude (double)</key>
		<key alias="smsTypeName">SMS</key>
		<key alias="smsTypeDescription">After user will scan the code it will saw new SMS message with specific content ready to send on specific number. Arguments: number (string), subject (string)</key>
		<key alias="urlTypeName">URL</key>
		<key alias="urlTypeDescription">After user will scan the code it will open specify resource in default application for specify protocol. i.e. specify website in default browser if protocol will bee HTTP or HTTPS. Argument: url (string)</key>
	</area>
	<area alias="qrCodeFormats">
		<key alias="bmpFormatName">Bitmap (.bmp)</key>
		<key alias="jpegFormatName">JPEG (.jpg)</key>
		<key alias="pngFormatName">PNG (.png)</key>
		<key alias="svgFormatName">SVG (.svg)</key>
	</area>
	<area alias="qrCodeSources">
		<key alias="absoluteUrlSourceName">Absolute URL</key>
		<key alias="absoluteUrlSourceDescription">Code is generated by absolute content URL.</key>
		<key alias="simplePropertySourceName">Content Property</key>
		<key alias="simplePropertySourceDescription">
			Code is generated by specify property from published content. Property alias must be specify in Source Provider Settings as list of delimited property alias in defined order or as JSON. Number of require attribute, attribute order and attribute name is defined by selected Type Provider.
			JSON format:
			{
			properties: {
			"attributeName1": "propertyAlias1",
			"attributeName2": "propertyAlias2"
			}
			}
		</key>
	</area>
	<area alias="qrCodeLevels">
		<key alias="LName">Level L (Low)</key>
		<key alias="MName">Level M (Medium)</key>
		<key alias="QName">Level Q (Quartile)</key>
		<key alias="HName">Level H (High)</key>
		<key alias="LDescription">7% of data bytes can be restored.</key>
		<key alias="MDescription">15% of data bytes can be restored.</key>
		<key alias="QDescription">25% of data bytes can be restored.</key>
		<key alias="HDescription">30% of data bytes can be restored.</key>
	</area>
	<area alias="qrCode">
		<key alias="qrCode">QR Code</key>
		<key alias="size">Pixel per module</key>
		<key alias="sizeDescription">The size in pixels of one module (the module is the dark square the code is build of).</key>
		<key alias="format">Format</key>
		<key alias="formatDescription">The output format in which the code is written.</key>
		<key alias="darkColor">Dark color</key>
		<key alias="darkColorDescription">The color of dark squares.</key>
		<key alias="lightColor">Light color</key>
		<key alias="lightColorDescription">The color of background.</key>
		<key alias="icon">Icon</key>
		<key alias="iconDescription">The icon in the center of code.</key>
		<key alias="iconBorderWidth">Icon border width</key>
		<key alias="iconBorderWidthDescription">The width of the border around the icon.</key>
		<key alias="drawQuiteZone">Draw quite zone</key>
		<key alias="drawQuiteZoneDescription">Draw or not the border around the code.</key>
		<key alias="dialogHeader">Generate QR Code</key>
		<key alias="iconSizePercent">Icon size (%)</key>
		<key alias="iconSizePercentDescription">The percent size of icon in the center of code.</key>
		<key alias="actionBtnCaption">Generate QR Code</key>
		<key alias="eccLevel">Error correction level</key>
		<key alias="eccLevelDescription">Level determine how much area of code can be unreadable but code is still readable.</key>
		<key alias="imageSize">Image size</key>		
		<key alias="notPublishedAnyContentVersionHedline">Unpublished content at all</key>
		<key alias="notPublishedAnyContentVersionMsg">This content has not published version. To generate QR Code content has to have published version.</key>
		<key alias="openDirtyContentHedline">This content has unsaved changes</key>
		<key alias="openDirtyContentMsg">QR Code is generate from saved property values of published content. This content has unsaved changes now. It's can make a difference between value which you see and value passed to generate QR Code. Do you want generate QR code anyway?</key>
		<key alias="notPublishedContentHedline">Unpublished content</key>
		<key alias="notPublishedContentMsg">This node was saved but it hasn't published version. It's can make a difference between value which you see and value passed to generate QR Code.</key>
		<key alias="generate">Generate</key>
		<key alias="publishFirst">I will Save And Publish first</key>
		<key alias="warning">Warning</key>
	</area>
</language>
